<?xml version="1.0" encoding="UTF-8"?>

<Root Name="Node">

  <Node Name="Root" Parent="BlockExpression">
    <Inherited Name="Statements"/>
    <Inherited Name="TrailingExpression"/>
  </Node>

  <Node Name="Identifier">
    <Value Name="Name" Type="string" Primitive="true"/>
  </Node>

  <Variant Name="Statement"/>

  <Node Name="Parameter">
    <Value Name="IsMutable" Type="bool" Primitive="true"/>
    <Value Name="Identifier" Type="Identifier"/>
  </Node>

  <Variant Name="Declaration" Parent="Statement"/>

  <Node Name="FunctionDeclaration" Parent="Declaration">
    <Value Name="FuncKeyword" Type="Token" Primitive="true"/>
    <Value Name="Identifier" Type="Identifier"/>
    <List Name="Parameters" Type="Parameter"/>
    <Value Name="ExpressionBody" Type="Expression" Optional="true"/>
    <Value Name="BlockBody" Type="BlockExpression" Optional="true"/>
  </Node>

  <Node Name="LetDeclaration" Parent="Declaration">
    <Value Name="LetKeyword" Type="Token" Primitive="true"/>
    <Value Name="IsMutable" Type="bool" Primitive="true"/>
    <Value Name="Identifier" Type="Identifier"/>
    <Value Name="Expression" Type="Expression"/>
  </Node>

  <Node Name="AssignmentStatement" Parent="Statement">
    <Value Name="Target" Type="Expression"/>
    <Value Name="Kind" Type="AssignmentKind" Primitive="true"/>
    <Value Name="Value" Type="Expression"/>
  </Node>

  <Node Name="ExpressionStatement" Parent="Statement">
    <Value Name="Expression" Type="Expression"/>
  </Node>

  <Variant Name="Expression"/>

  <Node Name="ErrorExpression" Parent="Expression"/>

  <Node Name="BlockExpression" Parent="Expression">
    <List Name="Statements" Type="Statement"/>
    <Value Name="TrailingExpression" Type="Expression" Optional="true"/>
  </Node>

  <Node Name="CallExpression" Parent="Expression">
    <Value Name="Target" Type="Expression"/>
    <List Name="Arguments" Type="Expression"/>
  </Node>

  <Node Name="LambdaExpression" Parent="Expression">
    <List Name="Parameters" Type="Parameter"/>
    <Value Name="ArrowToken" Type="Token" Primitive="true"/>
    <Value Name="Body" Type="Expression"/>
  </Node>

  <Node Name="TupleExpression" Parent="Expression">
    <List Name="Expressions" Type="Expression"/>
  </Node>

  <Node Name="IfExpression" Parent="Expression">
    <Value Name="IfKeyword" Type="Token" Primitive="true"/>
    <Value Name="Condition" Type="Expression"/>
    <Value Name="IfTrue" Type="BlockExpression"/>
    <Value Name="Else" Type="ElseClause" Optional="true"/>
  </Node>
  
  <Node Name="ElseClause">
    <Value Name="ElseKeyword" Type="Token" Primitive="true"/>
    <Value Name="IfFalse" Type="BlockExpression"/>
  </Node>

  <Node Name="LoopExpression" Parent="Expression">
    <Value Name="LoopKeyword" Type="Token" Primitive="true"/>
    <Value Name="Block" Type="BlockExpression"/>
  </Node>

  <Node Name="ReturnExpression" Parent="Expression">
    <Value Name="ReturnKeyword" Type="Token" Primitive="true"/>
    <Value Name="Expression" Type="Expression" Optional="true"/>
  </Node>

  <Node Name="BreakExpression" Parent="Expression">
    <Value Name="BreakKeyword" Type="Token" Primitive="true"/>
    <Value Name="Expression" Type="Expression" Optional="true"/>
  </Node>

  <Node Name="ContinueExpression" Parent="Expression"/>

  <Node Name="UnaryExpression" Parent="Expression">
    <Value Name="Kind" Type="UnaryKind" Primitive="true"/>
    <Value Name="Operand" Type="Expression"/>
  </Node>

  <Node Name="BinaryExpression" Parent="Expression">
    <Value Name="Left" Type="Expression"/>
    <Value Name="Kind" Type="BinaryKind" Primitive="true"/>
    <Value Name="Right" Type="Expression"/>
  </Node>

  <Node Name="IdentifierExpression" Parent="Expression">
    <Value Name="Identifier" Type="string" Primitive="true"/>
  </Node>

  <Node Name="StringExpression" Parent="Expression">
    <List Name="Parts" Type="StringPart"/>
  </Node>

  <Variant Name="StringPart"/>

  <Node Name="TextStringPart" Parent="StringPart">
    <Value Name="Text" Type="string" Primitive="true"/>
  </Node>

  <Node Name="InterpolationStringPart" Parent="StringPart">
    <Value Name="Expression" Type="Expression"/>
  </Node>

  <Node Name="BoolExpression" Parent="Expression">
    <Value Name="Value" Type="bool" Primitive="true"/>
  </Node>

  <Node Name="NumberExpression" Parent="Expression">
    <Value Name="Value" Type="double" Primitive="true"/>
  </Node>
  
  <Node Name="NilExpression" Parent="Expression"/>

</Root>
