// <auto-generated/>

#nullable enable

using Noa.Compiler.Syntax;

namespace Noa.Compiler.Nodes;

internal abstract class IntoAstBase
{
    {{~ for node in nodes ~}}
    {{~ if node.is_abstract ~}}
    public {{ node.name }} From{{ node.name }}({{ node.concrete }} syntax) => syntax switch
    {
        {{~ for child in node.children ~}}
        {{ child.concrete }} x => From{{ child.name }}(x),
        {{~ end ~}}
        _ => throw new UnreachableException()
    };
    {{~ else ~}}
    public abstract {{ node.name }} From{{ node.name }}({{ node.concrete }} syntax);
    {{~ end ~}}
    {{~ if !for.last ~}}

    {{~ end ~}}
    {{~ end ~}}
}
